{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["services_persons","axios","get","newPerson","post","id","delete","concat","PersonForm","props","react_default","a","createElement","onSubmit","addPerson","value","newName","onChange","handle","newNumber","handle2","type","Persons","persons","setPersons","map","person","App_Henkilo","key","name","number","ident","Henkilo","event","console","log","window","confirm","personService","then","response","filter","Notification","_ref","message","className","App","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","addMessage","setAddMessage","useEffect","data","App_Notification","App_PersonForm","preventDefault","newId","length","personObject","names","includes","alert","setTimeout","target","App_Persons","setPerson","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3c57d1d4.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newPerson => {\r\n    return axios.post(baseUrl, newPerson)\r\n}\r\n\r\nconst remove = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}` )\r\n}\r\n\r\nexport default {\r\n    getAll: getAll,\r\n    create: create,\r\n    remove: remove\r\n}","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport personService from './services/persons'\r\nimport './index.css'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.addPerson}>\r\n        <div>\r\n          nimi: <input \r\n          value={props.newName}\r\n          onChange={props.handle}\r\n          />\r\n        </div>\r\n        <div>\r\n          puhelinnumero: <input \r\n          value={props.newNumber}\r\n          onChange={props.handle2}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">lisää</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nconst Persons = (props) => {\r\n    const persons = props.persons\r\n    const setPersons = props.setPersons\r\n    const rows = () => persons.map(person =>\r\n        <Henkilo\r\n        persons={persons}\r\n        key={person.id}\r\n        name={person.name}\r\n        number={person.number}\r\n        setPersons={setPersons}\r\n        ident={person.id}\r\n        />\r\n        )\r\n        return (\r\n            <ul>\r\n          {rows()}\r\n      </ul>\r\n        )\r\n}\r\n\r\nconst Henkilo = ( props ) => {\r\n  const persons = props.persons\r\n  const setPersons = props.setPersons\r\n  const deletePerson = (event) => {\r\n    console.log('delete', props.ident )\r\n    if (window.confirm('Haluatko varmasti poistaa taman henkilon?')) {\r\n      personService.remove(props.ident)\r\n      .then(response => {\r\n        setPersons(persons.filter(person => person.id !== props.ident))\r\n      })\r\n    }\r\n  }\r\n    return (\r\n        <li>{props.name} {props.number}\r\n        <form onSubmit={deletePerson}>\r\n          <button type=\"submit\">poista</button>\r\n        </form>\r\n        </li>\r\n    )\r\n}\r\n\r\nconst Notification = ({message}) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  return (\r\n    <div className='added'>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber] = useState('050-')\r\n  const [addMessage, setAddMessage] = useState(null)\r\n\r\n  useEffect (() => {\r\n    personService.getAll()\r\n    .then(response => {\r\n      setPersons(response.data)\r\n    })\r\n  }, [])\r\n\r\n  const addPerson = (event) => {\r\n      event.preventDefault()\r\n      const newId = persons[persons.length-1].id +1\r\n      const personObject = {\r\n          name: newName,\r\n          id: newId,\r\n          number: newNumber\r\n      }\r\n      const names = (\r\n          persons.map(person => person.name)\r\n      )\r\n      personService\r\n      .create(personObject)\r\n      .then(response => {\r\n        names.includes(newName) ?\r\n       window.alert(newName + ' on jo luettelossa') : setPersons(persons.concat(response.data))\r\n      setNewName('')\r\n      setNewNumber(0)\r\n        console.log(response)\r\n\r\n      })\r\n      setAddMessage(\r\n        'Henkilo ' + newName + ' lisatty puhelinluetteloon'\r\n      )\r\n      setTimeout(() => {\r\n        setAddMessage(null)\r\n      }, 5000)\r\n\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Puhelinluettelo</h2>\r\n      <Notification message={addMessage} />\r\n      <PersonForm addPerson={addPerson} handle={handleNameChange} \r\n      handle2={handleNumberChange} newName={newName} newNumber={newNumber}/>\r\n      <h2>Numerot</h2>\r\n      <Persons persons={persons} setPerson={setPersons} />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}